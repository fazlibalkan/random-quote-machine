{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","quote","author","tweet","getNewQuote","bind","fetch","then","result","json","data","setState","content","replace","className","class","id","this","onClick","href","target","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAiDeA,E,kDA7Cb,aAAe,IAAD,8BACZ,gBACKC,MAAS,CACZC,MAAO,GACPC,OAAQ,GACRC,MAAO,IAIT,EAAKC,cAEL,EAAKA,YAAc,EAAKA,YAAYC,KAAjB,gBAXP,E,+CAed,WAAc,IAAD,OACXC,MAAM,kCACLC,MAAK,SAACC,GAAD,OAAYA,EAAOC,UACxBF,MAAK,SAACG,GACL,EAAKC,SAAS,CACZV,MAAOS,EAAKE,QACZV,OAAQQ,EAAKR,OACbC,MAAO,0CAA4CO,EAAKE,QAAQC,QAAQ,KAAM,KAAO,KAAOH,EAAKR,OAAOW,QAAQ,KAAM,Y,oBAM5H,WAEE,OACI,qBAAKC,UAAU,MAAMC,MAAM,GAA3B,SACE,wBAAQD,UAAU,aAAlB,SACE,sBAAKE,GAAG,YAAR,UACE,mBAAGA,GAAG,OAAN,SAAcC,KAAKjB,MAAMC,QACzB,oBAAIe,GAAG,SAAP,SAAiBC,KAAKjB,MAAME,SAC5B,wBAAQc,GAAG,YAAYE,QAASD,KAAKb,YAAaW,MAAM,iBAAxD,0BACA,mBAAGC,GAAG,cAAcG,KAAMF,KAAKjB,MAAMG,MAAOiB,OAAO,SAASL,MAAM,kBAAlE,oC,GAtCIM,IAAMC,WCSTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e6dd202e.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = ({\n      quote: \"\",\n      author: \"\",\n      tweet: \"\"\n    });\n\n    \n    this.getNewQuote();\n\n    this.getNewQuote = this.getNewQuote.bind(this);\n  }\n\n  //Get new quote from an API\n  getNewQuote(){\n    fetch(\"https://api.quotable.io/random\")\n    .then((result) => result.json())\n    .then((data) => {\n      this.setState({\n        quote: data.content,\n        author: data.author,\n        tweet: \"https://twitter.com/intent/tweet/?text=\" + data.content.replace(/ /g, \"+\") + \"+-\" + data.author.replace(/ /g, \"+\")\n      });\n    });\n  }\n\n  \n  render(){\n    \n    return (\n        <div className=\"App\" class=\"\">\n          <header className=\"App-header\">\n            <div id=\"quote-box\">\n              <p id=\"text\">{this.state.quote}</p>\n              <h6 id=\"author\">{this.state.author}</h6>\n              <button id=\"new-quote\" onClick={this.getNewQuote} class=\"btn btn-danger\">Change Quote</button>\n              <a id=\"tweet-quote\" href={this.state.tweet} target=\"_blank\" class=\"btn btn-primary\">Tweet This!</a>\n            </div>\n          </header>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}